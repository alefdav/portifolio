@mixin pseudo($display: block, $pos: relative, $content: ''){
    content: $content;
    display: $display;
    position: $pos;
}

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
    @include pseudo($pos: $position);
    width: 0;
    height: 0;
    @if $round {
        border-radius: 3px;
    }
    @if $direction == down {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
        margin-top: 0 - round( $size / 2.5 );
    } @else if $direction == up {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
        margin-bottom: 0 - round( $size / 2.5 );
    } @else if $direction == right {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
        margin-right: -$size;
    } @else if  $direction == left {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
        margin-left: -$size;
    }
}

@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

/* exemplo

input,
textarea {
    @include input-placeholder {
        color: $grey;
    }
}

*/

@function z($name) {
    @if index($z-indexes, $name) {
        @return (length($z-indexes) - index($z-indexes, $name)) + 1;
    } @else {
        @warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
        @return null;
    }
}
$z-indexes: (
    "menu-mobile",
    "menu",
    "submenu",
    "filtro-hover-canais"
);

//z-index: z('site-header');


@function get-value($n) {
    @return $n / ($n * 0 + 1);
 }

 @mixin font-size($font-size) {

    $base-px-size: $font-base;

    font-size: $font-size;
    font-size: (get-value($font-size) / $base-px-size) + rem;
 }

 @function getrem($n) {
    $base-px-size: $font-base;

    @return (get-value($n) / $base-px-size) + rem;
 }

 @function gr($n) {
    @return ($n /  $font-base) + rem;
 }

 @function rem($size) {
    @return $size / $font-base * 1rem;
}
